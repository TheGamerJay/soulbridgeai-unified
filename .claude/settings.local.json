{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(timeout 10 sleep 10)",
      "Bash(timeout 8 sleep 8)",
      "Bash(taskkill:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(dir:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(curl:*)",
      "Bash(set DATABASE_URL=postgresql://postgres:sDCOyvWZKSxyJvnJBZNSJemzZKbbSjIT@postgres-wj-8.railway.internal:5432/railway)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(timeout:*)",
      "Bash(sed:*)",
      "Bash(git restore:*)",
      "Bash(explorer:*)",
      "Bash(set PORT=8080)",
      "Bash(git rm:*)",
      "Bash(del test_beat_wizard.py)",
      "Bash(pip install:*)",
      "Bash(PYTHONWARNINGS=default python -X dev app.py)",
      "Bash(set PYTHONUTF8=1)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(bash start.sh)",
      "Bash(PYTHONIOENCODING=utf-8 DATABASE_URL=\"postgresql://postgres:sDCOyvWZKSxyJvnJBZNSJemzZKbbSjIT@postgres-wj-8.railway.internal:5432/railway\" python run_pgvector_migration.py)",
      "Bash(cd:*)",
      "Bash(railway-errors:*)",
      "Bash(railway --version)",
      "Bash(railway logs:*)",
      "Bash(PYTHONIOENCODING=utf-8 DATABASE_URL=\"postgresql://postgres:sDCOyvWZKSxyJvnJBZNSJemzZKbbSjIT@postgres-wj-8.railway.internal:5432/railway\" python fix_railway_database.py)",
      "Bash(PYTHONIOENCODING=utf-8 DATABASE_URL=\"postgresql://postgres:sDCOyvWZKSxyJvnJBZNSJemzZKbbSjIT@postgres-wj-8.railway.internal:5432/railway\" python fix_user_activity_log.py)",
      "Bash(railway status:*)",
      "Bash(railway domain:*)",
      "Bash(railway variables:*)",
      "Bash(sqlite3:*)",
      "Bash(PYTHONIOENCODING=utf-8 DATABASE_URL=\"postgresql://postgres:sDCOyvWZKSxyJvnJBZNSJemzZKbbSjIT@postgres-wj-8.railway.internal:5432/railway\" python -c \"\nimport psycopg2\nimport os\n\nDATABASE_URL = os.getenv(''DATABASE_URL'')\nif DATABASE_URL:\n    conn = psycopg2.connect(DATABASE_URL)\n    cursor = conn.cursor()\n    \n    # Check current schema\n    cursor.execute(\"\"SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ''user_community_avatars'' AND column_name = ''companion_id''\"\")\n    result = cursor.fetchone()\n    print(f''Current companion_id column: {result}'')\n    \n    # Update to TEXT if needed\n    if result and result[1] != ''text'':\n        cursor.execute(''ALTER TABLE user_community_avatars ALTER COLUMN companion_id TYPE TEXT USING companion_id::text'')\n        conn.commit()\n        print(''Updated companion_id to TEXT'')\n    else:\n        print(''companion_id is already TEXT or table does not exist'')\n        \n    conn.close()\n\")"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  }
}